@{

    string url = String.Empty;
    string getColumn = String.Empty;
    string urlDecoded = string.Empty;
    string dataType = "text";
    int contColumn = 0;
}
@{
    ViewBag.Title = @ViewBag.ViewTitle;
}

@if (Model != null)
{
    <div class="content">
        <div class="row">
            <div class="col-lg-12">
                <div class="hpanel">
                    <div class="panel-heading hbuilt">
                        <div class="panel-tools">
                            <a class="showhide"><i class="fa fa-chevron-up"></i></a>
                        </div>
                        @ViewBag.ViewTitle
                    </div>

                    <div class="panel-body">
                        <div class="row">

                            @foreach (System.Data.DataColumn col in Model.Columns)
                            {
                                if (col.ColumnMapping != System.Data.MappingType.Hidden && col.ExtendedProperties["Header"] != null)
                                {
                                    if (col.ExtendedProperties["Header"].ToString() == "Header")
                                    {
                                        <div class="col-lg-3">
                                            <span class="font-extra-bold">@col.Caption: </span>
                                            @if (Model.Rows.Count > 0)
                                            {@Model.Rows[0][col].ToString().Trim()}
                                        </div>
                                    }
                                }
                            }
                            <div class="col-lg-3">
                                <span class="font-extra-bold">Total numbre of records: </span>
                                @Model.Rows.Count
                            </div>

                        </div>
                    </div>
                </div>
            </div>



            <div class="col-lg-12">
                <div class="hpanel">
                    <div class="panel-body table-responsive">
                        <table id="viewTable" class="table">
                            <thead>
                                <tr>
                                    @foreach (System.Data.DataColumn dc in Model.Columns)
                                    {

                                        if (dc.ColumnMapping != System.Data.MappingType.Hidden && dc.ExtendedProperties["Header"] == null)
                                        {
                                            dataType = dc.ExtendedProperties["url"] != null ? "html" : dc.DataType.Name.Equals("Int32") ? "number" : "text";
                                            //ViewContext.Writer.Write(String.Format("<th {0} data-type='{1}'>{2}</th>", contColumn > 4 ? "data-hide='phone,tablet'" : String.Empty, dataType, col.Caption.ToUpper()));
                                            //ViewContext.Writer.Write(String.Format("<th data-type='{0}'>{1}</th>", dataType, col.Caption.ToUpper()));
                                            ViewContext.Writer.Write(String.Format("<th {0} data-type='{1}'>{2}</th>", contColumn > 3 ? "data-breakpoints='xs sm md'" : String.Empty, dataType, dc.Caption));
                                            contColumn++;
                                        }

                                    }
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (System.Data.DataRow dr in Model.Rows)
                                {
                                    if (dr.Table.Columns.Contains("safety_duplicate_1") && dr.Table.Columns.Contains("safety_duplicate_2")){
                                        /*if (dr["safety_duplicate_1"].ToString() != "" && dr["safety_duplicate_2"].ToString() != "")
                                        {
                                            ViewContext.Writer.Write("<tr class='success'>");
                                        }
                                        else*/
                                        if (dr["safety_duplicate_1"].ToString() != "" && dr["safety_duplicate_2"].ToString() == "")
                                        {
                                            ViewContext.Writer.Write("<tr class='warning'>");
                                        }
                                        else
                                        if (dr["safety_duplicate_1"].ToString() == "" && dr["safety_duplicate_2"].ToString() != "")
                                        {
                                            ViewContext.Writer.Write("<tr class='warning'>");
                                        }
                                        else
                                        if (dr["safety_duplicate_1"].ToString() == "" && dr["safety_duplicate_2"].ToString() == "")
                                        {
                                            ViewContext.Writer.Write("<tr class='danger'>");
                                        }
                                    }
                                    else
                                    {
                                        ViewContext.Writer.Write("<tr>");
                                    }

                                    foreach (System.Data.DataColumn dc in Model.Columns)
                                    {
                                        if (dc.ColumnMapping != System.Data.MappingType.Hidden && dc.ExtendedProperties["Header"] == null)
                                        {


                                            //create a link column
                                            if (dc.ExtendedProperties["url"] != null)
                                            {

                                                url = dc.ExtendedProperties["url"].ToString();
                                                urlDecoded = Server.UrlDecode(url);
                                                getColumn = urlDecoded.Substring(urlDecoded.IndexOf("{") + 1,
                                                                                 (urlDecoded.IndexOf("}") -
                                                                                 urlDecoded.IndexOf("{")) - 1);
                                                url = url.Replace("%7B" + getColumn + "%7D", dr[getColumn].ToString());
                                                ViewContext.Writer.Write(String.Format("<td nowrap><a class='text-info' href='{1}'><i class='pe-7s-link pe-5x' ></i>{0}</a></td>", dr[dc].ToString().Trim(), url));
                                            }
                                            else
                                            {
                                                ViewContext.Writer.Write(String.Format("<td nowrap>{0}</td>", dr[dc].ToString().Trim()));
                                            }

                                        }

                                    }
                                    ViewContext.Writer.Write("</tr>");
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}