//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrinGlobal.Zone.GGService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GGService.GUISoap")]
    public interface GUISoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetData(bool suppressExceptions, string userName, string password, string dataviewName, string delimitedParameterList, int offset, int limit, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLookupTableStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLookupTableStats(bool suppressExceptions, string userName, string password, string tableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllLookupTableStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllLookupTableStats(bool suppressExceptions, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDataParameterTemplate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDataParameterTemplate(bool suppressExceptions, string userName, string password, string dataviewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClearCache", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ClearCache(bool suppressExceptions, string userName, string password, string cacheName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferOwnership", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TransferOwnership(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, int newOwnerCooperatorID, bool includeDescendents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Search", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Search(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidateLogin(bool suppressExceptions, string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ChangePassword(bool suppressExceptions, string userName, string password, string targetUserName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeLanguage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ChangeLanguage(bool suppressExceptions, string userName, string password, int newLanguageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RenameList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RenameList(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RenameTab", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RenameTab(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DeleteList(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SaveData(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteImage(string userName, string password, string imageFileName);
        
        // CODEGEN: Parameter 'DownloadImageResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DownloadImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GrinGlobal.Zone.GGService.DownloadImageResponse DownloadImage(GrinGlobal.Zone.GGService.DownloadImageRequest request);
        
        // CODEGEN: Parameter 'imageBytes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadImage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GrinGlobal.Zone.GGService.UploadImageResponse UploadImage(GrinGlobal.Zone.GGService.UploadImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFileInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetFileInfo(bool suppressExceptions, string groupName, string versionName, bool onlyAvailable, bool onlyLatest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSearchEngineInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSearchEngineInfo(bool suppressExceptions, bool enabledIndexesOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResolveUniqueKeys", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ResolveUniqueKeys(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadImage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string appOrDocRelativePath;
        
        public DownloadImageRequest() {
        }
        
        public DownloadImageRequest(string userName, string password, string appOrDocRelativePath) {
            this.userName = userName;
            this.password = password;
            this.appOrDocRelativePath = appOrDocRelativePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadImageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadImageResult;
        
        public DownloadImageResponse() {
        }
        
        public DownloadImageResponse(byte[] DownloadImageResult) {
            this.DownloadImageResult = DownloadImageResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadImage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string appOrDocRelativePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] imageBytes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public bool createThumbnail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool overwriteIfExists;
        
        public UploadImageRequest() {
        }
        
        public UploadImageRequest(string userName, string password, string appOrDocRelativePath, byte[] imageBytes, bool createThumbnail, bool overwriteIfExists) {
            this.userName = userName;
            this.password = password;
            this.appOrDocRelativePath = appOrDocRelativePath;
            this.imageBytes = imageBytes;
            this.createThumbnail = createThumbnail;
            this.overwriteIfExists = overwriteIfExists;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadImageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadImageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UploadImageResult;
        
        public UploadImageResponse() {
        }
        
        public UploadImageResponse(string UploadImageResult) {
            this.UploadImageResult = UploadImageResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GUISoapChannel : GrinGlobal.Zone.GGService.GUISoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GUISoapClient : System.ServiceModel.ClientBase<GrinGlobal.Zone.GGService.GUISoap>, GrinGlobal.Zone.GGService.GUISoap {
        
        public GUISoapClient() {
        }
        
        public GUISoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GUISoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GUISoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GUISoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetData(bool suppressExceptions, string userName, string password, string dataviewName, string delimitedParameterList, int offset, int limit, string options) {
            return base.Channel.GetData(suppressExceptions, userName, password, dataviewName, delimitedParameterList, offset, limit, options);
        }
        
        public System.Data.DataSet GetLookupTableStats(bool suppressExceptions, string userName, string password, string tableName) {
            return base.Channel.GetLookupTableStats(suppressExceptions, userName, password, tableName);
        }
        
        public System.Data.DataSet GetAllLookupTableStats(bool suppressExceptions, string userName, string password) {
            return base.Channel.GetAllLookupTableStats(suppressExceptions, userName, password);
        }
        
        public System.Data.DataSet GetDataParameterTemplate(bool suppressExceptions, string userName, string password, string dataviewName) {
            return base.Channel.GetDataParameterTemplate(suppressExceptions, userName, password, dataviewName);
        }
        
        public bool ClearCache(bool suppressExceptions, string userName, string password, string cacheName) {
            return base.Channel.ClearCache(suppressExceptions, userName, password, cacheName);
        }
        
        public System.Data.DataSet TransferOwnership(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, int newOwnerCooperatorID, bool includeDescendents) {
            return base.Channel.TransferOwnership(suppressExceptions, userName, password, ds, newOwnerCooperatorID, includeDescendents);
        }
        
        public System.Data.DataSet Search(bool suppressExceptions, string userName, string password, string query, bool ignoreCase, bool andTermsTogether, string indexList, string resolverName, int offset, int limit, string options) {
            return base.Channel.Search(suppressExceptions, userName, password, query, ignoreCase, andTermsTogether, indexList, resolverName, offset, limit, options);
        }
        
        public System.Data.DataSet ValidateLogin(bool suppressExceptions, string userName, string password) {
            return base.Channel.ValidateLogin(suppressExceptions, userName, password);
        }
        
        public System.Data.DataSet ChangePassword(bool suppressExceptions, string userName, string password, string targetUserName, string newPassword) {
            return base.Channel.ChangePassword(suppressExceptions, userName, password, targetUserName, newPassword);
        }
        
        public System.Data.DataSet ChangeLanguage(bool suppressExceptions, string userName, string password, int newLanguageID) {
            return base.Channel.ChangeLanguage(suppressExceptions, userName, password, newLanguageID);
        }
        
        public System.Data.DataSet RenameList(bool suppressExceptions, string userName, string password, string existingGroupName, string newGroupName, string existingTabName, string newTabName, int cooperatorID) {
            return base.Channel.RenameList(suppressExceptions, userName, password, existingGroupName, newGroupName, existingTabName, newTabName, cooperatorID);
        }
        
        public System.Data.DataSet RenameTab(bool suppressExceptions, string userName, string password, string existingTabName, string newTabName, int cooperatorID) {
            return base.Channel.RenameTab(suppressExceptions, userName, password, existingTabName, newTabName, cooperatorID);
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        public System.Data.DataSet DeleteList(bool suppressExceptions, string userName, string password, string groupName, string tabName, int cooperatorID) {
            return base.Channel.DeleteList(suppressExceptions, userName, password, groupName, tabName, cooperatorID);
        }
        
        public System.Data.DataSet SaveData(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options) {
            return base.Channel.SaveData(suppressExceptions, userName, password, ds, options);
        }
        
        public bool DeleteImage(string userName, string password, string imageFileName) {
            return base.Channel.DeleteImage(userName, password, imageFileName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GrinGlobal.Zone.GGService.DownloadImageResponse GrinGlobal.Zone.GGService.GUISoap.DownloadImage(GrinGlobal.Zone.GGService.DownloadImageRequest request) {
            return base.Channel.DownloadImage(request);
        }
        
        public byte[] DownloadImage(string userName, string password, string appOrDocRelativePath) {
            GrinGlobal.Zone.GGService.DownloadImageRequest inValue = new GrinGlobal.Zone.GGService.DownloadImageRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.appOrDocRelativePath = appOrDocRelativePath;
            GrinGlobal.Zone.GGService.DownloadImageResponse retVal = ((GrinGlobal.Zone.GGService.GUISoap)(this)).DownloadImage(inValue);
            return retVal.DownloadImageResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GrinGlobal.Zone.GGService.UploadImageResponse GrinGlobal.Zone.GGService.GUISoap.UploadImage(GrinGlobal.Zone.GGService.UploadImageRequest request) {
            return base.Channel.UploadImage(request);
        }
        
        public string UploadImage(string userName, string password, string appOrDocRelativePath, byte[] imageBytes, bool createThumbnail, bool overwriteIfExists) {
            GrinGlobal.Zone.GGService.UploadImageRequest inValue = new GrinGlobal.Zone.GGService.UploadImageRequest();
            inValue.userName = userName;
            inValue.password = password;
            inValue.appOrDocRelativePath = appOrDocRelativePath;
            inValue.imageBytes = imageBytes;
            inValue.createThumbnail = createThumbnail;
            inValue.overwriteIfExists = overwriteIfExists;
            GrinGlobal.Zone.GGService.UploadImageResponse retVal = ((GrinGlobal.Zone.GGService.GUISoap)(this)).UploadImage(inValue);
            return retVal.UploadImageResult;
        }
        
        public System.Data.DataSet GetFileInfo(bool suppressExceptions, string groupName, string versionName, bool onlyAvailable, bool onlyLatest) {
            return base.Channel.GetFileInfo(suppressExceptions, groupName, versionName, onlyAvailable, onlyLatest);
        }
        
        public System.Data.DataSet GetSearchEngineInfo(bool suppressExceptions, bool enabledIndexesOnly) {
            return base.Channel.GetSearchEngineInfo(suppressExceptions, enabledIndexesOnly);
        }
        
        public System.Data.DataSet ResolveUniqueKeys(bool suppressExceptions, string userName, string password, System.Data.DataSet ds, string options) {
            return base.Channel.ResolveUniqueKeys(suppressExceptions, userName, password, ds, options);
        }
    }
}
