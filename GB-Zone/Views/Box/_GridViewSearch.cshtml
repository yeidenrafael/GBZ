@using System.Data


@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "gvSearch";
        settings.KeyFieldName = "InventoryId";
        settings.CallbackRouteValues = new { Controller = "Box", Action = "GridView", serverId = ViewData["server"].ToString(), moduleId = ViewData["moduleId"].ToString(), formId = ViewData["formId"].ToString(), value = ViewData["value"].ToString(), viewName = "_GridViewSearch" };
        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "Box", Action = "BatchUpdateAction", serverId = ViewData["server"].ToString(), moduleId = ViewData["moduleId"].ToString(), formId = ViewData["formId"].ToString(), fieldId = ViewData["viewName"].ToString(), value = ViewData["value"].ToString(), viewName = "_GridViewSearch" };
        settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
        settings.SettingsEditing.BatchEditSettings.HighlightDeletedRows = true;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;
        settings.CommandColumn.Visible = true;
        settings.ClientSideEvents.BatchEditRowInserting = "AddNewItem";
        settings.ClientSideEvents.EndCallback = "EndSave";
        foreach (System.Data.DataColumn dc in Model.Columns)
        {
            if (dc.ExtendedProperties["is_primary_key"].ToString() == "Y")
            {
                settings.KeyFieldName = dc.ColumnName; //"inventory_id";
            }

            if (dc.ExtendedProperties["is_header"] == null)
            {
                settings.Columns.Add(col =>
                {
                    col.FieldName = dc.ColumnName;
                    col.Name = dc.ColumnName;
                    col.Caption = dc.Caption;
                    if (dc.ColumnMapping == System.Data.MappingType.Hidden)
                    {
                        col.Visible = false;
                    }
                });
            }
        }
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CellEditorInitialize = (s, e) =>
        {
            if (e.Column.Index == (e.Column.Collection.Count - 1))
            {
                ASPxEditBase editor = e.Editor as ASPxEditBase;
                editor.SetClientSideEventHandler("KeyDown", "NewItem");
            }
        };
    });
    if (ViewData["EditError"] != null)
    {

        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()