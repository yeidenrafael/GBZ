<!-- views/Order -->
@model System.Data.DataSet

@{
    ViewBag.ViewTitle = "| " + ViewData["moduleId"];
}

@section scriptsHeader {
    <script type="text/javascript">
        const SYSTEM_COLUMNNAME_CHECK_LIST = @Html.Raw(Json.Encode(ViewData["systemCheckListColumName"]));
        const SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION = @Html.Raw(Json.Encode(ViewData["systemCheckToSaveAction"]));
        const LI_TRAFIC_LIGHT = "iTrafficLight";
        const INPUT_TEXT_QR = "textBoxCheck_I";
        const SPAN_LAST_CHECK_ITEM = "spanCheck_Item";
        const SPAN_FIND_ITEM = "spanFind_Item";
        const DIV_LOAD_MODAL = "divLoadMe";
        const KEY_ENTER = 13;
        const COLOR_SUCCESS =  "forestgreen";
        const COLOR_ERROR =  "red";
        const COLOR_NEUTRO = "white"

        var remainigElementToCheckCount = @Html.Raw(Json.Encode(ViewData["remainigElementToCheckCount"]));
        var itemsWithCheck = new Array();
        var itemsWithOutCheck = new Array();
        var ALL_ITEMS = new Array();
        var rowNumAllToStopModal = 0;
        var rowNumGetToSotpoModal = 0;
        var itemPreviewCheck = new Array();
        $( document ).ready(function() {
            Init();
        });

        function Init(){
            hiddenColumn();
            remainingItems(0);//$("#"+SPAN_FIND_ITEM).html((ALL_ITEMS.length ) + "/" + (ALL_ITEMS.length));
        }

        function hiddenColumn(){
            var columnes = '.id_'+SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION;
            $(columnes).css('display','none');
        }

        function saveAll(){
            InitArray();
            remainigElementToCheckCount = gvSearch.cpDataActionCheckCount;
            Init();
        }

        function KeyPressTexBCheck(s, e) {
            if (e.htmlEvent.keyCode == KEY_ENTER) {
                var text = $("#"+INPUT_TEXT_QR).val().trim();
                CheckElement(text);
                $("#"+SPAN_LAST_CHECK_ITEM).html("<b>"+$("#"+INPUT_TEXT_QR).val()+"</b>");
                $("#"+INPUT_TEXT_QR).val('');
            }
        }

        function CheckElement(text){
            var indice = ALL_ITEMS.indexOf(text);
            if(indice != -1){
                $("#"+LI_TRAFIC_LIGHT).css({'color':COLOR_SUCCESS});
                indice = itemsWithOutCheck.indexOf(text);
                if(indice != -1){
                    itemsWithCheck.push(itemsWithOutCheck[indice]);
                    remainingItems(itemsWithCheck.length);
                    itemsWithOutCheck.pop(indice);
                    Color();
                }
            }
            else{
                $("#"+LI_TRAFIC_LIGHT).css({'color':COLOR_ERROR});
                $("#audioError")[0].play();
            }
            hiddenColumn();
        }

        function Color(){
            var itemTemp = itemsWithCheck;
            var indexDelete = -1;
            var indexCellColor = 0;
            for(var i=0; i<ALL_ITEMS.length; i++){
                var row_now = gvSearch.GetRow(i);
                var id = $(row_now).attr("id");
                $("#"+id).css({'background-color':COLOR_NEUTRO});
            }
            for(var i=0; i<ALL_ITEMS.length; i++){
                var row_now = gvSearch.GetRow(i);
                indexDelete = -1;
                for(var j=0; j<=itemTemp.length; j++){
                    if($(row_now).text().indexOf(itemTemp[j])!=-1){
                        indexDelete = j;
                        indexCellColor++;
                        var id = $(row_now).attr("id");
                        $("#"+id).css({'background-color':COLOR_SUCCESS});
                        var key = parseInt(id.replace("gvSearch_DXDataRow", ""),10);
                        gvSearch.batchEditApi.SetCellValue(key, SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION, true);
                    }
                }
            }
            hiddenColumn();
        }

        function ColorCallback(){
            setTimeout(function() {
                Color();
            }, 1000);
        }

        function InitArray(){
            //itemsWithCheck = new Array();
            itemsWithOutCheck = new Array();
            ALL_ITEMS = new Array();
            rowNumAllToStopModal = 0;
            rowNumGetToSotpoModal = 0;
            ModalLoad();
            var data = gvSearch.cpModelData;
            rowNumAllToStopModal = Object.keys(data).length;
            if (data) {
                for (var i = 0; i < rowNumAllToStopModal; i++) {
                    ALL_ITEMS.push(data[i].trim());
                    itemsWithOutCheck.push(data[i].trim());
                    rowNumGetToSotpoModal++;
                }
            }
            remainingItems(0);
            ModalClose();
            $("#labelChceck").text("Scan QR: ["+gvSearch.cpCaptionSearch+"]");
        }

        function ModalLoad(){
            $("#"+DIV_LOAD_MODAL).modal({
                backdrop: "static",
                keyboard: false,
                show: true
            });
        }

        function ModalClose(){
            if(rowNumGetToSotpoModal < rowNumAllToStopModal){
                setTimeout(function() {
                    ModalClose();
                }, 1000);
            }else{
                $("#"+DIV_LOAD_MODAL).modal("hide");
            }
        }

        function remainingItems(indexCellColor){
            if(ALL_ITEMS.length != 0){
                var total = (indexCellColor);//+ remainigElementToCheckCount );
                if(total > ALL_ITEMS.length){
                    total = ALL_ITEMS.length;
                }
                $("#"+SPAN_FIND_ITEM).html((total) + "/" + (ALL_ITEMS.length));
            }
        }
    </script>
}

@Html.Partial("_SearchFields")

@if (ViewData["parameters"] != null)
{
    Html.RenderPartial("_CheckList");
    Html.RenderPartial("_HeaderGridView");

}
<audio controls id="audioSuccess" hidden="hidden">
    <source src="@Url.Content("Content/audio/Success.mp3")" type="audio/mpeg">
</audio>
<audio controls id="audioError" hidden="hidden">
    <source src="@Url.Content("Content/audio/Error.mp3")" type="audio/mpeg">
</audio>
