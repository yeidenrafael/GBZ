<!-- views/Order -->
@model System.Data.DataSet

@{
    ViewBag.ViewTitle = "| " + ViewData["moduleId"];
}

@section scriptsHeader {
    <script type="text/javascript">
        var SYSTEM_COLUMNNAME_CHECK_LIST = "";
        var SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION = "";
        var SYSTEM_CHECK_BEFORE = "";
        const LI_TRAFIC_LIGHT = "iTrafficLight";
        const INPUT_TEXT_QR = "textBoxCheck_I";
        const SPAN_LAST_CHECK_ITEM = "spanCheck_Item";
        const SPAN_FIND_ITEM = "spanFind_Item";
        const DIV_LOAD_MODAL = "divLoadMe";
        const KEY_ENTER = 13;
        const COLOR_SUCCESS =  "forestgreen";
        const COLOR_ERROR =  "red";
        const COLOR_NEUTRO = "white"
        const SPAN_COMPLETE = "spanComplete";

        var itemsWithCheck = new Array();
        var itemsWithOutCheck = new Array();
        var ALL_ITEMS = new Array();
        var rowNumAllToStopModal = 0;
        var rowNumGetToSotpoModal = 0;
        var itemPreviewCheck = new Array();
        $( document ).ready(function() {
            Init();
        });

        function Init(){
            hiddenColumn();
            missingItems(0);
        }

        function hiddenColumn(){
            let columnes = '.id_'+SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION;
            $(columnes).css('display','none');
        }

        function saveAll() {
            setTimeout(function () {
                InitArray();
            }, 1000);
            hiddenColumn();//Init();
            $("#"+LI_TRAFIC_LIGHT).css({'color':COLOR_NEUTRO});
            $("#"+SPAN_LAST_CHECK_ITEM).html("");
        }

        function KeyPressTexBCheck(s, e) {
            if (e.htmlEvent.keyCode == KEY_ENTER) {
                let text = $("#"+INPUT_TEXT_QR).val().trim();
                CheckElement(text);
                $("#"+SPAN_LAST_CHECK_ITEM).html("<b>"+$("#"+INPUT_TEXT_QR).val()+"</b>");
                $("#"+INPUT_TEXT_QR).val('');
            }
        }

        function CheckElement(text){
            let indice = ALL_ITEMS.indexOf(text);
            if(indice != -1){
                $("#"+LI_TRAFIC_LIGHT).css({'color':COLOR_SUCCESS});
                indice = itemsWithOutCheck.indexOf(text);
                if(indice != -1){
                    itemsWithCheck.push(itemsWithOutCheck[indice]);
                    itemsWithOutCheck.splice(indice,1);
                    missingItems(itemsWithCheck.length);
                    $("#audioSuccess")[0].play();
                    Color();
                }
            }
            else{
                $("#"+LI_TRAFIC_LIGHT).css({'color':COLOR_ERROR});
                $("#audioError")[0].play();
            }
            hiddenColumn();
        }

        function Color(){
            let itemTemp = itemsWithCheck;
            let indexDelete = -1;
            let indexCellColor = 0;
            for(let i=0; i<ALL_ITEMS.length; i++){
                let row_now = gvSearch.GetRow(i);
                let id = $(row_now).attr("id");
                $("#"+id).css({'background-color':COLOR_NEUTRO});
            }
            for(let i=0; i<ALL_ITEMS.length; i++){
                let row_now = gvSearch.GetRow(i);
                indexDelete = -1;
                for(let j=0; j<=itemTemp.length; j++){
                    if($(row_now).text().indexOf(itemTemp[j])!=-1){
                        indexDelete = j;
                        indexCellColor++;
                        let id = $(row_now).attr("id");
                        $("#"+id).css({'background-color':COLOR_SUCCESS});
                        let key = parseInt(id.replace("gvSearch_DXDataRow", ""),10);
                        gvSearch.batchEditApi.SetCellValue(key, SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION, true);
                    }
                }
            }
            hiddenColumn();
        }

        function ColorCallback(){
            setTimeout(function() {
                Color();
            }, 1000);
        }

        function InitArray() {
            itemsWithOutCheck = new Array();
            itemPreviewCheck = new Array();
            itemsWithCheck = new Array();
            let jsonData = $.parseJSON(gvSearch.cpModelData);
            SYSTEM_COLUMNNAME_CHECK_LIST = gvSearch.cpSystemCheckListColumName;
            SYSTEM_COLUMNNAME_CHECK_TO_SAVE_ACTION = gvSearch.cpSystemCheckToSaveAction;
            SYSTEM_CHECK_BEFORE = gvSearch.cpSystemCheckBefore;
            ALL_ITEMS = new Array();
            rowNumAllToStopModal = 0;
            rowNumGetToSotpoModal = 0;
            ModalLoad();
            rowNumAllToStopModal = Object.keys(jsonData).length;
            jsonData.forEach(function (item) {
                ALL_ITEMS.push(item[SYSTEM_COLUMNNAME_CHECK_LIST]);
                itemsWithOutCheck.push(item[SYSTEM_COLUMNNAME_CHECK_LIST]);
                if (item[SYSTEM_CHECK_BEFORE] == true) {
                    itemPreviewCheck.push(item[SYSTEM_COLUMNNAME_CHECK_LIST]);
                }
                rowNumGetToSotpoModal++;
            });
            missingItems(0);
            ModalClose();
            $("#labelChceck").text("Scan QR: [" + gvSearch.cpCaptionSearch + "]");
            hiddenColumn();
        }

        function ModalLoad(){
            $("#"+DIV_LOAD_MODAL).modal({
                backdrop: "static",
                keyboard: false,
                show: true
            });
        }

        function ModalClose(){
            if(rowNumGetToSotpoModal < rowNumAllToStopModal){
                setTimeout(function() {
                    ModalClose();
                }, 1000);
            }else{
                $("#"+DIV_LOAD_MODAL).modal("hide");
            }
        }

        function missingItems(indexCellColor) {
            let setA = new Set(itemsWithCheck);
            let setB = new Set(itemPreviewCheck);
            let setC = new Set([...setA].filter(x => setB.has(x)));
            if (ALL_ITEMS.length != 0) {
                console.log(indexCellColor+" + "+ (setB.size - setC.size))
                let total = (indexCellColor + (setB.size - setC.size));
                if(total >= ALL_ITEMS.length){
                    total = ALL_ITEMS.length;
                    $("#" + SPAN_COMPLETE).html("<b> Order completed </b>");
                }
                else {
                    $("#" + SPAN_COMPLETE).html("");
                }
                $("#"+SPAN_FIND_ITEM).html((total) + "/" + (ALL_ITEMS.length));
            }
        }
    </script>
}

@Html.Partial("_SearchFields")

@if (ViewData["parameters"] != null)
{
    Html.RenderPartial("_CheckList");
    Html.RenderPartial("_HeaderGridView");

}
<audio controls id="audioSuccess" hidden="hidden">
    <source src="@Url.Content("Content/audio/Success.mp3")" type="audio/mpeg">
</audio>
<audio controls id="audioError" hidden="hidden">
    <source src="@Url.Content("Content/audio/Error.mp3")" type="audio/mpeg">
</audio>
